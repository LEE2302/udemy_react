{"ast":null,"code":"var _jsxFileName = \"/Users/lee/reactTest/01-starting-setup/src/App.js\";\nimport React from \"react\";\nimport Expenses from \"./components/Expenses\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  //정보들\n  const expense = [{\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  }, {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }];\n\n  //** 예전 리액트 사용법이면서 JSX문법이 내부에서는 이런식으로 변환이 되어 html로 보내진다.\n  //그렇기 때문에 JSX문법에서 항상 부모요소가 있어야 하는 이유도 아래와 같이 부모없이 동일한 위치에 2개 이상이 안되기 때문에 부모요소안에 자식요소가 여러개가 가능하기 떄문이다.**\n  //예전 리액트 프로젝트를 보면 이런식으로 많이 써있고 import도 import React form 'react';를 매 컴포넌트 파일마다 해줬어야했고 많이 보일거다.\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"let's get started!\"),\n  //   React.createElement(Expenses, { items: expense })\n  // );\n\n  //JSX문법\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Let's get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Expenses","App","expense","id","title","amount","date","Date"],"sources":["/Users/lee/reactTest/01-starting-setup/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Expenses from \"./components/Expenses\";\n\nfunction App() {\n  //정보들\n  const expense = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  //** 예전 리액트 사용법이면서 JSX문법이 내부에서는 이런식으로 변환이 되어 html로 보내진다.\n  //그렇기 때문에 JSX문법에서 항상 부모요소가 있어야 하는 이유도 아래와 같이 부모없이 동일한 위치에 2개 이상이 안되기 때문에 부모요소안에 자식요소가 여러개가 가능하기 떄문이다.**\n  //예전 리액트 프로젝트를 보면 이런식으로 많이 써있고 import도 import React form 'react';를 매 컴포넌트 파일마다 해줬어야했고 많이 보일거다.\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"let's get started!\"),\n  //   React.createElement(Expenses, { items: expense })\n  // );\n\n  //JSX문법\n  return (\n    <div>\n      <h2>Let's get started!</h2>\n      <Expenses items={expense} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAAC;AAE7C,SAASC,GAAG,GAAG;EACb;EACA,MAAMC,OAAO,GAAG,CACd;IACEC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IAAEJ,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAC1E;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,eAAe;IACtBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,CACF;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC3B,QAAC,QAAQ;MAAC,KAAK,EAAEL;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEV;AAAC,KAzCQD,GAAG;AA2CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}