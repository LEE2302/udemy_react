{"ast":null,"code":"var _jsxFileName = \"/Users/lee/reactTest/01-starting-setup/src/components/Expense/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Card from \"../UI/card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expenses(props) {\n  _s();\n  //useState 를 이용하는 방법 1\n  // const [year, setYear] = useState(\"2019\");\n\n  //강의에서 나오는 함수를 이용하는 방법 2\n  const [filteredYear, setFilteredYear] = useState(\"2019\");\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n    // console.log(filteredYear);\n    console.log(selectedYear);\n  };\n\n  //필터를 통하여 년도에 맞는 아이템만 보이게\n  const filteredExpenses = props.items.filter(el => {\n    return el.date.getFullYear().toString() === filteredYear;\n  });\n  // console.log(props.items[0].date.getFullYear().toString());\n\n  let contentList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\uBAA9\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  if (filteredExpenses > 0) {\n    contentList = filteredExpenses.map(el => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: el.title,\n      amount: el.amount,\n      date: el.date\n    }, el.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChahgeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), contentList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"9AA5adITwYqkuXIIKiR6QvVcyqo=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","Card","ExpenseItem","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","console","log","filteredExpenses","items","filter","el","date","getFullYear","toString","contentList","map","title","amount","id"],"sources":["/Users/lee/reactTest/01-starting-setup/src/components/Expense/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../UI/card\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport \"./Expenses.css\";\n\nfunction Expenses(props) {\n  //useState 를 이용하는 방법 1\n  // const [year, setYear] = useState(\"2019\");\n\n  //강의에서 나오는 함수를 이용하는 방법 2\n  const [filteredYear, setFilteredYear] = useState(\"2019\");\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n    // console.log(filteredYear);\n    console.log(selectedYear);\n  };\n\n  //필터를 통하여 년도에 맞는 아이템만 보이게\n  const filteredExpenses = props.items.filter((el) => {\n    return el.date.getFullYear().toString() === filteredYear;\n  });\n  // console.log(props.items[0].date.getFullYear().toString());\n\n  let contentList = <p>목록이 없습니다.</p>;\n\n  if (filteredExpenses > 0) {\n    contentList = filteredExpenses.map((el) => (\n      <ExpenseItem\n        key={el.id}\n        title={el.title}\n        amount={el.amount}\n        date={el.date}\n      />\n    ));\n  }\n  return (\n    <div>\n      <Card className=\"expenses\">\n        {/* useStat를 이용하는 방법 1 */}\n        {/* <ExpensesFilter year={year} setYear={setYear} /> */}\n        {/* 강의에서 나오는 함수를 이용하는 방법 2 */}\n        <ExpensesFilter\n          selected={filteredYear}\n          onChahgeFilter={filterChangeHandler}\n        />\n        {contentList}\n        {/* <ExpenseItem\n          title={props.items[0].title}\n          amount={props.items[0].amount}\n          date={props.items[0].date}\n        />\n        <ExpenseItem\n          title={props.items[1].title}\n          amount={props.items[1].amount}\n          date={props.items[1].date}\n        />\n        <ExpenseItem\n          title={props.items[2].title}\n          amount={props.items[2].amount}\n          date={props.items[2].date}\n        />\n        <ExpenseItem\n          title={props.items[3].title}\n          amount={props.items[3].amount}\n          date={props.items[3].date}\n        /> */}\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,gBAAgB;AAAC;AAExB,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB;EACA;;EAEA;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAMQ,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;IAC7B;IACAC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAGP,KAAK,CAACQ,KAAK,CAACC,MAAM,CAAEC,EAAE,IAAK;IAClD,OAAOA,EAAE,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKZ,YAAY;EAC1D,CAAC,CAAC;EACF;;EAEA,IAAIa,WAAW,gBAAG;IAAA,UAAG;EAAS;IAAA;IAAA;IAAA;EAAA,QAAI;EAElC,IAAIP,gBAAgB,GAAG,CAAC,EAAE;IACxBO,WAAW,GAAGP,gBAAgB,CAACQ,GAAG,CAAEL,EAAE,iBACpC,QAAC,WAAW;MAEV,KAAK,EAAEA,EAAE,CAACM,KAAM;MAChB,MAAM,EAAEN,EAAE,CAACO,MAAO;MAClB,IAAI,EAAEP,EAAE,CAACC;IAAK,GAHTD,EAAE,CAACQ,EAAE;MAAA;MAAA;MAAA;IAAA,QAKb,CAAC;EACJ;EACA,oBACE;IAAA,uBACE,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAA,wBAIxB,QAAC,cAAc;QACb,QAAQ,EAAEjB,YAAa;QACvB,cAAc,EAAEE;MAAoB;QAAA;QAAA;QAAA;MAAA,QACpC,EACDW,WAAW;IAAA;MAAA;MAAA;MAAA;IAAA;EAqBP;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GAhEQf,QAAQ;AAAA,KAARA,QAAQ;AAkEjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}