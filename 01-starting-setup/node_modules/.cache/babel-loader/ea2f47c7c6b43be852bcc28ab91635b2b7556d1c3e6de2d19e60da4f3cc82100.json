{"ast":null,"code":"var _jsxFileName = \"/Users/lee/reactTest/01-starting-setup/src/components/card.js\";\nimport \"./card.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card(props) {\n  //children props개념\n  //변수를 선언하고 card클래스 띄어쓰고 props.className을 설정한것\n  //=> 만약 pops.className이  className=\"expenses\"이런식으로 Expenses.js에서 인수로 받아온다면\n  //=> className = 'card expenses' 이런식으로 클래스가 두개가 된것이다. 클래스는 띄어쓰기로 여러개를 구분하여 선언가능. css셀렉터 개념\n  //그러므로 동일한 css는 card로 각자 필요한 클래스는 props.className으로 받는것이다.\n  const classes = \"card \" + props.className;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["Card","props","classes","className","children"],"sources":["/Users/lee/reactTest/01-starting-setup/src/components/card.js"],"sourcesContent":["import \"./card.css\";\n\nfunction Card(props) {\n  //children props개념\n  //변수를 선언하고 card클래스 띄어쓰고 props.className을 설정한것\n  //=> 만약 pops.className이  className=\"expenses\"이런식으로 Expenses.js에서 인수로 받아온다면\n  //=> className = 'card expenses' 이런식으로 클래스가 두개가 된것이다. 클래스는 띄어쓰기로 여러개를 구분하여 선언가능. css셀렉터 개념\n  //그러므로 동일한 css는 card로 각자 필요한 클래스는 props.className으로 받는것이다.\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n"],"mappings":";AAAA,OAAO,YAAY;AAAC;AAEpB,SAASA,IAAI,CAACC,KAAK,EAAE;EACnB;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAG,OAAO,GAAGD,KAAK,CAACE,SAAS;EAEzC,oBAAO;IAAK,SAAS,EAAED,OAAQ;IAAA,UAAED,KAAK,CAACG;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAO;AACxD;AAAC,KATQJ,IAAI;AAWb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}