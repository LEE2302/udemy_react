{"ast":null,"code":"var _jsxFileName = \"/Users/lee/reactTest/01-starting-setup/src/App.js\";\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expense/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n//정보들\n\n//화살표 함수로도 가능 강의자 개인적으로 선호 짧기때문\n//그냥 여러가지로 된다정도만 알고 개인이 편한걸로 쓰면됨.\n//const App = () => {...안에 내용들}\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [expense, setExpense] = useState(dummy_expense);\n  const expense = [{\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14)\n  }, {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  }, {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28)\n  }, {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12)\n  }];\n  const addExpenseHandler = expense => {\n    console.log(\"In App.js\");\n    console.log(expense);\n  };\n  //** 예전 리액트 사용법이면서 JSX문법이 내부에서는 이런식으로 변환이 되어 html로 보내진다.\n  //그렇기 때문에 JSX문법에서 항상 부모요소가 있어야 하는 이유도 아래와 같이 부모없이 동일한 위치에 2개 이상이 안되기 때문에 부모요소안에 자식요소가 여러개가 가능하기 떄문이다.**\n  //예전 리액트 프로젝트를 보면 이런식으로 많이 써있고 import도 import React form 'react';를 매 컴포넌트 파일마다 해줬어야했고 많이 보일거다.\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"let's get started!\"),\n  //   React.createElement(Expenses, { items: expense })\n  // );\n\n  //JSX문법\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expense\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Expenses","NewExpense","App","expense","id","title","amount","date","Date","addExpenseHandler","console","log"],"sources":["/Users/lee/reactTest/01-starting-setup/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Expenses from \"./components/Expense/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\n//정보들\n\n//화살표 함수로도 가능 강의자 개인적으로 선호 짧기때문\n//그냥 여러가지로 된다정도만 알고 개인이 편한걸로 쓰면됨.\n//const App = () => {...안에 내용들}\nfunction App() {\n  // const [expense, setExpense] = useState(dummy_expense);\n  const expense = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const addExpenseHandler = (expense) => {\n    console.log(\"In App.js\");\n    console.log(expense);\n  };\n  //** 예전 리액트 사용법이면서 JSX문법이 내부에서는 이런식으로 변환이 되어 html로 보내진다.\n  //그렇기 때문에 JSX문법에서 항상 부모요소가 있어야 하는 이유도 아래와 같이 부모없이 동일한 위치에 2개 이상이 안되기 때문에 부모요소안에 자식요소가 여러개가 가능하기 떄문이다.**\n  //예전 리액트 프로젝트를 보면 이런식으로 많이 써있고 import도 import React form 'react';를 매 컴포넌트 파일마다 해줬어야했고 많이 보일거다.\n  // return React.createElement(\n  //   \"div\",\n  //   {},\n  //   React.createElement(\"h2\", {}, \"let's get started!\"),\n  //   React.createElement(Expenses, { items: expense })\n  // );\n\n  //JSX문법\n  return (\n    <div>\n      {/* <NewExpense saveExpenseDate={addExpenseHandler} /> */}\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expense} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,UAAU,MAAM,oCAAoC;;AAE3D;;AAEA;AACA;AACA;AAAA;AACA,SAASC,GAAG,GAAG;EACb;EACA,MAAMC,OAAO,GAAG,CACd;IACEC,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAE,KAAK;IACbC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IAAEJ,EAAE,EAAE,IAAI;IAAEC,KAAK,EAAE,QAAQ;IAAEC,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAAE,CAAC,EAC1E;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,eAAe;IACtBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,EACD;IACEJ,EAAE,EAAE,IAAI;IACRC,KAAK,EAAE,mBAAmB;IAC1BC,MAAM,EAAE,GAAG;IACXC,IAAI,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;EAC5B,CAAC,CACF;EAED,MAAMC,iBAAiB,GAAIN,OAAO,IAAK;IACrCO,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAACR,OAAO,CAAC;EACtB,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACE;IAAA,wBAEE,QAAC,UAAU;MAAC,YAAY,EAAEM;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC/C,QAAC,QAAQ;MAAC,KAAK,EAAEN;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxB;AAEV;AAAC,KA9CQD,GAAG;AAgDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}