{"ast":null,"code":"var _jsxFileName = \"/Users/lee/reactTest/01-starting-setup/src/components/Expense/ExpenseChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseChart = props => {\n  // Chart로 프롭스를 넘겨줄때 넘겨 받을 데이터를 정했기 때문에 label속성과 value속성을 넘겨준다.\n  const chartDataPoint = [{\n    label: \"1월\",\n    value: 0\n  }, {\n    label: \"2월\",\n    value: 0\n  }, {\n    label: \"3월\",\n    value: 0\n  }, {\n    label: \"4월\",\n    value: 0\n  }, {\n    label: \"5월\",\n    value: 0\n  }, {\n    label: \"6월\",\n    value: 0\n  }, {\n    label: \"7월\",\n    value: 0\n  }, {\n    label: \"8월\",\n    value: 0\n  }, {\n    label: \"9월\",\n    value: 0\n  }, {\n    label: \"11월\",\n    value: 0\n  }, {\n    label: \"12월\",\n    value: 0\n  }];\n  for (let data of props.filterData) {\n    const month = data.date.getMonth();\n    chartDataPoint[month].value += data.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartData: chartDataPoint\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Chart","ExpenseChart","props","chartDataPoint","label","value","data","filterData","month","date","getMonth","amount"],"sources":["/Users/lee/reactTest/01-starting-setup/src/components/Expense/ExpenseChart.js"],"sourcesContent":["import React from \"react\";\n\nimport Chart from \"../Chart/Chart\";\n\nconst ExpenseChart = (props) => {\n  // Chart로 프롭스를 넘겨줄때 넘겨 받을 데이터를 정했기 때문에 label속성과 value속성을 넘겨준다.\n  const chartDataPoint = [\n    { label: \"1월\", value: 0 },\n    { label: \"2월\", value: 0 },\n    { label: \"3월\", value: 0 },\n    { label: \"4월\", value: 0 },\n    { label: \"5월\", value: 0 },\n    { label: \"6월\", value: 0 },\n    { label: \"7월\", value: 0 },\n    { label: \"8월\", value: 0 },\n    { label: \"9월\", value: 0 },\n    { label: \"11월\", value: 0 },\n    { label: \"12월\", value: 0 },\n  ];\n\n  for (let data of props.filterData) {\n    const month = data.date.getMonth();\n    chartDataPoint[month].value += data.amount;\n  }\n\n  return <Chart chartData={chartDataPoint} />;\n};\n\nexport default ExpenseChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,gBAAgB;AAAC;AAEnC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B;EACA,MAAMC,cAAc,GAAG,CACrB;IAAEC,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAE,CAAC,EACzB;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAE,CAAC,CAC3B;EAED,KAAK,IAAIC,IAAI,IAAIJ,KAAK,CAACK,UAAU,EAAE;IACjC,MAAMC,KAAK,GAAGF,IAAI,CAACG,IAAI,CAACC,QAAQ,EAAE;IAClCP,cAAc,CAACK,KAAK,CAAC,CAACH,KAAK,IAAIC,IAAI,CAACK,MAAM;EAC5C;EAEA,oBAAO,QAAC,KAAK;IAAC,SAAS,EAAER;EAAe;IAAA;IAAA;IAAA;EAAA,QAAG;AAC7C,CAAC;AAAC,KAtBIF,YAAY;AAwBlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}